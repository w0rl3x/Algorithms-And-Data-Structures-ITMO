// Гений трейдинга
// Сэм - известный криптовалютный трейдер. Свой успех он заработал благодаря особому способу трейдинга. Каждый день Сэм определяет: пойдёт сегодня стейблкоин вверх, вниз или по кругу.

// Для этого он придумал сложный алгоритм: парень переводит номер дня в двоичную систему счисления (без лидирующих нулей) и объединяет в группы одинаковые идущие подряд двоичные цифры этого числа. Если количество таких групп равняется 3, то акции пойдут вверх, иначе - вниз.

// Помогите найти Сэму количество дней, в которые он может трейдить, если новые торги идут с дня X до дня Y.

// Входные данные

// В единственной строке заданы два числа X и Y разделённые пробелом (1 ≤ X ≤ Y ≤ 10^18)

// Выходные данные
// В единственной строке необходимо вывести количество дней, когда акции пойдут вверх.


// сложность - O(n^3) = O(60^3), по памяти - O(1)
#include <iostream>

// функция перевода 2 в степень x
long long powerraiser(int x) {
    long long y = 2;
    for (long long j = 1; j < x; ++j) {
        y *= 2;
    }
    return y; // возврат результата
}

// мейн функция
int main()
{
    long long x, y;
    std::cin >> x >> y;
    int pos_amount = 0; // колво дней, когда торги идут успешно

    // цикл по перебору всевозможных значений i j k
    // по условию формулы (2^n - 2^m + 2^k - 1), n > m > k > 0
    // src: oeis.org/A043570
    for (long long i = 60; i > 1; i--) {
        for (long long j = i - 1; j > 1; j--) {
            for (long long k = j - 1; k > 0; k--) {
                long long goodnum = powerraiser(i) - powerraiser(j) + powerraiser(k) - 1;  // вычисляем подходящее число с помощью функции возведения в степень (powerraiser)
                if (goodnum >= x && goodnum <= y) {
                    pos_amount++;
                }
            }
        }
    }
    std::cout << pos_amount; // колво успешных для торгов дней
    return 0;
}